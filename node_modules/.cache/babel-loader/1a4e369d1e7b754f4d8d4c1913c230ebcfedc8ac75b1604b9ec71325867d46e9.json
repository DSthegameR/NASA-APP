{"ast":null,"code":"const NASA_API_KEY = process.env.REACT_APP_NASA_API_KEY;\nexport const fetchNEOs = async () => {\n  const today = new Date().toISOString().split('T')[0];\n  const url = `https://api.nasa.gov/neo/rest/v1/feed?start_date=${today}&end_date=${today}&api_key=${NASA_API_KEY}`;\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('Failed to fetch NEO data');\n  }\n  const data = await response.json();\n  return data.near_earth_objects[today];\n};","map":{"version":3,"names":["NASA_API_KEY","process","env","REACT_APP_NASA_API_KEY","fetchNEOs","today","Date","toISOString","split","url","response","fetch","ok","Error","data","json","near_earth_objects"],"sources":["C:/Users/asus/OneDrive/Desktop/orrery-web-app/src/services/nasaApi.js"],"sourcesContent":["const NASA_API_KEY = process.env.REACT_APP_NASA_API_KEY;\n\nexport const fetchNEOs = async () => {\n  const today = new Date().toISOString().split('T')[0];\n  const url = `https://api.nasa.gov/neo/rest/v1/feed?start_date=${today}&end_date=${today}&api_key=${NASA_API_KEY}`;\n  \n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('Failed to fetch NEO data');\n  }\n  const data = await response.json();\n  return data.near_earth_objects[today];\n};\n\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACpD,MAAMC,GAAG,GAAG,oDAAoDJ,KAAK,aAAaA,KAAK,YAAYL,YAAY,EAAE;EAEjH,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;EACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC7C;EACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,kBAAkB,CAACX,KAAK,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}