{"ast":null,"code":"import * as THREE from 'three';\nclass Planet extends THREE.Mesh {\n  constructor({\n    name,\n    color,\n    size,\n    orbitRadius\n  }) {\n    const geometry = new THREE.SphereGeometry(size, 32, 32);\n    const material = new THREE.MeshBasicMaterial({\n      color\n    });\n    super(geometry, material);\n    this.name = name;\n    this.orbitRadius = orbitRadius;\n    this.angle = Math.random() * Math.PI * 2;\n    this.speed = 0.02 / orbitRadius;\n    this.position.x = Math.cos(this.angle) * orbitRadius;\n    this.position.z = Math.sin(this.angle) * orbitRadius;\n  }\n  orbit() {\n    this.angle += this.speed;\n    this.position.x = Math.cos(this.angle) * this.orbitRadius;\n    this.position.z = Math.sin(this.angle) * this.orbitRadius;\n  }\n}\nexport default Planet;","map":{"version":3,"names":["THREE","Planet","Mesh","constructor","name","color","size","orbitRadius","geometry","SphereGeometry","material","MeshBasicMaterial","angle","Math","random","PI","speed","position","x","cos","z","sin","orbit"],"sources":["C:/Users/asus/OneDrive/Desktop/orrery-web-app/src/components/Orrery/Planet.js"],"sourcesContent":["import * as THREE from 'three';\n\nclass Planet extends THREE.Mesh {\n  constructor({ name, color, size, orbitRadius }) {\n    const geometry = new THREE.SphereGeometry(size, 32, 32);\n    const material = new THREE.MeshBasicMaterial({ color });\n    super(geometry, material);\n\n    this.name = name;\n    this.orbitRadius = orbitRadius;\n    this.angle = Math.random() * Math.PI * 2;\n    this.speed = 0.02 / orbitRadius;\n\n    this.position.x = Math.cos(this.angle) * orbitRadius;\n    this.position.z = Math.sin(this.angle) * orbitRadius;\n  }\n\n  orbit() {\n    this.angle += this.speed;\n    this.position.x = Math.cos(this.angle) * this.orbitRadius;\n    this.position.z = Math.sin(this.angle) * this.orbitRadius;\n  }\n}\n\nexport default Planet;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,MAAMC,MAAM,SAASD,KAAK,CAACE,IAAI,CAAC;EAC9BC,WAAWA,CAAC;IAAEC,IAAI;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAY,CAAC,EAAE;IAC9C,MAAMC,QAAQ,GAAG,IAAIR,KAAK,CAACS,cAAc,CAACH,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;IACvD,MAAMI,QAAQ,GAAG,IAAIV,KAAK,CAACW,iBAAiB,CAAC;MAAEN;IAAM,CAAC,CAAC;IACvD,KAAK,CAACG,QAAQ,EAAEE,QAAQ,CAAC;IAEzB,IAAI,CAACN,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACG,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACK,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,IAAI,CAACE,EAAE,GAAG,CAAC;IACxC,IAAI,CAACC,KAAK,GAAG,IAAI,GAAGT,WAAW;IAE/B,IAAI,CAACU,QAAQ,CAACC,CAAC,GAAGL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACP,KAAK,CAAC,GAAGL,WAAW;IACpD,IAAI,CAACU,QAAQ,CAACG,CAAC,GAAGP,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACT,KAAK,CAAC,GAAGL,WAAW;EACtD;EAEAe,KAAKA,CAAA,EAAG;IACN,IAAI,CAACV,KAAK,IAAI,IAAI,CAACI,KAAK;IACxB,IAAI,CAACC,QAAQ,CAACC,CAAC,GAAGL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACP,KAAK,CAAC,GAAG,IAAI,CAACL,WAAW;IACzD,IAAI,CAACU,QAAQ,CAACG,CAAC,GAAGP,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACT,KAAK,CAAC,GAAG,IAAI,CAACL,WAAW;EAC3D;AACF;AAEA,eAAeN,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}