{"ast":null,"code":"import * as THREE from 'three';\nclass NEO extends THREE.Mesh {\n  constructor({\n    name,\n    estimated_diameter,\n    close_approach_data\n  }) {\n    const size = estimated_diameter.kilometers.estimated_diameter_max / 100;\n    const geometry = new THREE.SphereGeometry(size, 16, 16);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0xff0000\n    });\n    super(geometry, material);\n    this.name = name;\n    this.position.set(Math.random() * 40 - 20, Math.random() * 40 - 20, Math.random() * 40 - 20);\n  }\n}\nexport default NEO;","map":{"version":3,"names":["THREE","NEO","Mesh","constructor","name","estimated_diameter","close_approach_data","size","kilometers","estimated_diameter_max","geometry","SphereGeometry","material","MeshBasicMaterial","color","position","set","Math","random"],"sources":["C:/Users/asus/OneDrive/Desktop/orrery-web-app/src/components/Orrery/NEO.js"],"sourcesContent":["import * as THREE from 'three';\n\nclass NEO extends THREE.Mesh {\n  constructor({ name, estimated_diameter, close_approach_data }) {\n    const size = estimated_diameter.kilometers.estimated_diameter_max / 100;\n    const geometry = new THREE.SphereGeometry(size, 16, 16);\n    const material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n    super(geometry, material);\n\n    this.name = name;\n    this.position.set(\n      Math.random() * 40 - 20,\n      Math.random() * 40 - 20,\n      Math.random() * 40 - 20\n    );\n  }\n}\n\nexport default NEO;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,MAAMC,GAAG,SAASD,KAAK,CAACE,IAAI,CAAC;EAC3BC,WAAWA,CAAC;IAAEC,IAAI;IAAEC,kBAAkB;IAAEC;EAAoB,CAAC,EAAE;IAC7D,MAAMC,IAAI,GAAGF,kBAAkB,CAACG,UAAU,CAACC,sBAAsB,GAAG,GAAG;IACvE,MAAMC,QAAQ,GAAG,IAAIV,KAAK,CAACW,cAAc,CAACJ,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;IACvD,MAAMK,QAAQ,GAAG,IAAIZ,KAAK,CAACa,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,KAAK,CAACJ,QAAQ,EAAEE,QAAQ,CAAC;IAEzB,IAAI,CAACR,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACW,QAAQ,CAACC,GAAG,CACfC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EACvBD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EACvBD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EACvB,CAAC;EACH;AACF;AAEA,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}